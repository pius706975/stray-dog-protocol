// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing search screen Snapshot Testing should render search screen correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onGestureCancel={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <RCTScrollView
            collapsable={false}
            data={
              [
                "",
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            handlerTag={1}
            handlerType="NativeViewGestureHandler"
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            renderScrollComponent={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={[]}
            style={
              {
                "marginHorizontal": 5,
              }
            }
            viewabilityConfigCallbackPairs={[]}
            waitFor={
              [
                {
                  "current": null,
                },
                {
                  "current": null,
                },
              ]
            }
          >
            <View>
              <View
                onFocusCapture={[Function]}
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    [
                      undefined,
                      undefined,
                      {
                        "flex": 1,
                      },
                      undefined,
                      {},
                      {},
                      {},
                      {
                        "backgroundColor": "#f0f6fb",
                        "justifyContent": "space-between",
                        "position": "relative",
                      },
                    ]
                  }
                  testID="SearchScreen"
                >
                  <RCTScrollView
                    contentContainerStyle={
                      {
                        "alignItems": undefined,
                        "flex": undefined,
                        "flexGrow": 1,
                        "gap": undefined,
                        "justifyContent": undefined,
                        "marginBottom": undefined,
                        "padding": 15,
                        "paddingVertical": undefined,
                      }
                    }
                  >
                    <View>
                      <View
                        style={
                          [
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "paddingBottom": 5,
                              "paddingTop": 10,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            [
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              {
                                "width": "85%",
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#6499c4",
                                "borderBottomColor": "#e1e1e1",
                                "borderBottomWidth": 1,
                                "borderRadius": 20,
                                "borderTopColor": "#e1e1e1",
                                "borderTopWidth": 1,
                                "padding": 8,
                              }
                            }
                            testID="RNE__SearchBar-wrapper"
                          >
                            <View
                              style={
                                {
                                  "paddingHorizontal": 0,
                                  "width": "100%",
                                }
                              }
                              testID="RNE__Input__view-wrapper"
                            >
                              <View
                                collapsable={false}
                                style={
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "white",
                                    "borderBottomWidth": 0,
                                    "borderColor": "#86939e",
                                    "borderRadius": 15,
                                    "flexDirection": "row",
                                    "minHeight": 30,
                                    "overflow": "hidden",
                                    "transform": [
                                      {
                                        "translateX": 0,
                                      },
                                    ],
                                  }
                                }
                              >
                                <TextInput
                                  editable={true}
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  placeholder="searchFieldPlaceholder"
                                  placeholderTextColor="#86939e"
                                  platform="default"
                                  style={
                                    {
                                      "color": "#4d5963",
                                      "flex": 1,
                                      "fontFamily": "Kanit-Regular",
                                      "fontSize": 18,
                                      "marginLeft": 10,
                                      "minHeight": 40,
                                    }
                                  }
                                  testID="RNE__SearchBar"
                                  underlineColorAndroid="transparent"
                                  value=""
                                />
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "height": 40,
                                      "justifyContent": "center",
                                      "marginRight": 8,
                                      "marginVertical": 4,
                                      "paddingRight": 4,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      {
                                        "flexDirection": "row",
                                      }
                                    }
                                  />
                                </View>
                              </View>
                              <Text
                                style={
                                  {
                                    "color": "#ff190c",
                                    "fontSize": 12,
                                    "height": 0,
                                    "margin": 0,
                                    "padding": 0,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                        <View
                          style={
                            [
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              {
                                "borderColor": "#6499c4",
                                "borderRadius": 20,
                                "borderWidth": 3,
                                "padding": 15,
                                "paddingBottom": 5,
                                "paddingLeft": 5,
                                "paddingRight": 5,
                                "paddingTop": 5,
                              },
                            ]
                          }
                        >
                          <View
                            accessibilityState={
                              {
                                "busy": undefined,
                                "checked": undefined,
                                "disabled": undefined,
                                "expanded": undefined,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            testID="filterButton"
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight="24"
                              bbWidth="24"
                              fill="none"
                              focusable={false}
                              height={24}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                [
                                  {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  {
                                    "flex": 0,
                                    "height": 24,
                                    "width": 24,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={24}
                              xml="
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_77_27295)">
<path d="M4.24993 5.61C6.56993 8.59 9.99993 13 9.99993 13V18C9.99993 19.1 10.8999 20 11.9999 20C13.0999 20 13.9999 19.1 13.9999 18V13C13.9999 13 17.4299 8.59 19.7499 5.61C20.2599 4.95 19.7899 4 18.9499 4H5.03993C4.20993 4 3.73993 4.95 4.24993 5.61Z" fill="#323232"/>
</g>
<defs>
<clipPath id="clip0_77_27295">
<rect width="24" height="24" fill="white"/>
</clipPath>
</defs>
</svg>

    
    "
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <RNSVGGroup
                                fill={null}
                                propList={
                                  [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGGroup
                                  clipPath="clip0_77_27295"
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGPath
                                    d="M4.24993 5.61C6.56993 8.59 9.99993 13 9.99993 13V18C9.99993 19.1 10.8999 20 11.9999 20C13.0999 20 13.9999 19.1 13.9999 18V13C13.9999 13 17.4299 8.59 19.7499 5.61C20.2599 4.95 19.7899 4 18.9499 4H5.03993C4.20993 4 3.73993 4.95 4.24993 5.61Z"
                                    fill={
                                      {
                                        "payload": 4281479730,
                                        "type": 0,
                                      }
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                  />
                                </RNSVGGroup>
                                <RNSVGDefs>
                                  <RNSVGClipPath
                                    fill={
                                      {
                                        "payload": 4278190080,
                                        "type": 0,
                                      }
                                    }
                                    name="clip0_77_27295"
                                  >
                                    <RNSVGRect
                                      fill={
                                        {
                                          "payload": 4294967295,
                                          "type": 0,
                                        }
                                      }
                                      height="24"
                                      propList={
                                        [
                                          "fill",
                                        ]
                                      }
                                      width="24"
                                      x="0"
                                      y="0"
                                    />
                                  </RNSVGClipPath>
                                </RNSVGDefs>
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          [
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                        testID="shipList"
                      >
                        <RCTScrollView
                          collapsable={false}
                          contentContainerStyle={
                            {
                              "gap": 14,
                            }
                          }
                          getItem={[Function]}
                          getItemCount={[Function]}
                          handlerTag={2}
                          handlerType="NativeViewGestureHandler"
                          keyExtractor={[Function]}
                          onContentSizeChange={[Function]}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          onLayout={[Function]}
                          onMomentumScrollBegin={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          removeClippedSubviews={false}
                          renderItem={[Function]}
                          renderScrollComponent={[Function]}
                          scrollEventThrottle={50}
                          stickyHeaderIndices={[]}
                          viewabilityConfigCallbackPairs={[]}
                          waitFor={
                            [
                              {
                                "current": null,
                              },
                              {
                                "current": null,
                              },
                            ]
                          }
                        >
                          <View />
                        </RCTScrollView>
                      </View>
                      <Modal
                        animationType="slide"
                        hardwareAccelerated={false}
                        modifiers={
                          {
                            "alignments": {},
                            "backgroundColor": undefined,
                            "borderRadius": undefined,
                            "color": "transparent",
                            "flexStyle": undefined,
                            "margins": {},
                            "paddings": {},
                            "positionStyle": undefined,
                            "typography": undefined,
                          }
                        }
                        testID="filterModal"
                        transparent={true}
                        visible={false}
                      />
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Search"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
