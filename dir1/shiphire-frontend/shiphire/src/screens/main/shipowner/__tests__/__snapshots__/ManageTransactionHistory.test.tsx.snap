// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Manage Transaction History Screen Snapshot Testing should render Manage Transaction History correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onGestureCancel={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <RCTScrollView
              collapsable={false}
              data={
                [
                  "",
                ]
              }
              getItem={[Function]}
              getItemCount={[Function]}
              handlerTag={1}
              handlerType="NativeViewGestureHandler"
              keyExtractor={[Function]}
              onContentSizeChange={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              renderScrollComponent={[Function]}
              scrollEventThrottle={50}
              showsVerticalScrollIndicator={false}
              stickyHeaderIndices={[]}
              style={
                {
                  "height": "100%",
                  "width": "100%",
                }
              }
              viewabilityConfigCallbackPairs={[]}
              waitFor={
                [
                  {
                    "current": null,
                  },
                  {
                    "current": null,
                  },
                ]
              }
            >
              <View>
                <View
                  onFocusCapture={[Function]}
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    style={
                      [
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        {
                          "borderRadius": 8,
                          "height": "100%",
                          "margin": 6,
                        },
                      ]
                    }
                  >
                    <RCTScrollView
                      ItemSeparatorComponent={[Function]}
                      collapsable={false}
                      data={
                        [
                          {
                            "_id": "65a8bda54b191011546c35cf",
                            "deleteStatus": "undefined",
                            "genericDocument": [
                              {
                                "fileName": "file1",
                                "fileUrl": "https://shiphire-bucket.s3.ap-southeast-1.amazonaws.com/shiphire/shipHistory/65a8bda54b191011546c35cf/file1",
                              },
                            ],
                            "locationDeparture": "Balikpapan",
                            "locationDestination": "Samarinda",
                            "needs": "",
                            "price": 50000000,
                            "rentEndDate": "2023-12-14T05:56:51.918Z",
                            "rentStartDate": "2023-12-09T05:56:51.918Z",
                            "renterCompanyName": "",
                            "shipId": "65a8bda44b191011546c21b1",
                            "source": "automatic",
                          },
                        ]
                      }
                      getItem={[Function]}
                      getItemCount={[Function]}
                      handlerTag={2}
                      handlerType="NativeViewGestureHandler"
                      keyExtractor={[Function]}
                      onContentSizeChange={[Function]}
                      onEndReachedThreshold={0.1}
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      onLayout={[Function]}
                      onMomentumScrollBegin={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      removeClippedSubviews={false}
                      renderItem={[Function]}
                      renderScrollComponent={[Function]}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={[]}
                      testID="transaction-history-list"
                      viewabilityConfigCallbackPairs={[]}
                      waitFor={
                        [
                          {
                            "current": null,
                          },
                          {
                            "current": null,
                          },
                        ]
                      }
                    >
                      <View>
                        <View
                          onFocusCapture={[Function]}
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            style={
                              [
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                {
                                  "borderBottomWidth": 0.5,
                                  "flexDirection": "row",
                                },
                              ]
                            }
                            testID="transaction-history-item"
                          >
                            <View
                              style={
                                [
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  {
                                    "flex": 1,
                                    "paddingLeft": 14,
                                    "paddingRight": 10,
                                    "paddingVertical": 14,
                                  },
                                ]
                              }
                            >
                              <Text
                                numberOfLines={0}
                                style={
                                  {
                                    "borderBottomWidth": 0,
                                    "borderColor": undefined,
                                    "color": "#4d5963",
                                    "fontFamily": "Kanit-SemiBold",
                                    "fontSize": 14,
                                    "lineHeight": undefined,
                                    "textAlign": undefined,
                                  }
                                }
                              >
                                ShipOwner.ManageTransactionHistory.textRentPeriod
                              </Text>
                              <Text
                                numberOfLines={0}
                                style={
                                  {
                                    "borderBottomWidth": 0,
                                    "borderColor": undefined,
                                    "color": "#4d5963",
                                    "fontFamily": "Kanit-Regular",
                                    "fontSize": 14,
                                    "lineHeight": undefined,
                                    "textAlign": undefined,
                                  }
                                }
                              >
                                Dec 9, 2023
                                 
                                ShipOwner.ManageTransactionHistory.textUntil
                                 
                                Dec 14, 2023
                              </Text>
                              <Text
                                numberOfLines={0}
                                style={
                                  {
                                    "borderBottomWidth": 0,
                                    "borderColor": undefined,
                                    "color": "#4d5963",
                                    "fontFamily": "Kanit-SemiBold",
                                    "fontSize": 14,
                                    "lineHeight": undefined,
                                    "textAlign": undefined,
                                  }
                                }
                              >
                                ShipOwner.ManageTransactionHistory.textLocation
                              </Text>
                              <Text
                                numberOfLines={0}
                                style={
                                  {
                                    "borderBottomWidth": 0,
                                    "borderColor": undefined,
                                    "color": "#4d5963",
                                    "fontFamily": "Kanit-Regular",
                                    "fontSize": 14,
                                    "lineHeight": undefined,
                                    "textAlign": undefined,
                                  }
                                }
                              >
                                Balikpapan
                                 
                                ShipOwner.ManageTransactionHistory.textTo
                                 
                                Samarinda
                              </Text>
                              <View
                                row={true}
                                style={
                                  [
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    {},
                                    {},
                                    {
                                      "flexDirection": "row",
                                    },
                                    {
                                      "flex": 1,
                                      "flexWrap": "wrap",
                                    },
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "backgroundColor": "#216dab",
                                      "borderRadius": 5,
                                      "flexDirection": "row",
                                      "marginRight": 5,
                                      "marginTop": 5,
                                      "padding": 5,
                                      "paddingHorizontal": 8,
                                    }
                                  }
                                >
                                  <View
                                    marginR-5={true}
                                    style={
                                      [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        {},
                                        {
                                          "marginRight": 5,
                                        },
                                        {},
                                        undefined,
                                      ]
                                    }
                                  >
                                    <RNSVGSvgView
                                      align="xMidYMid"
                                      bbHeight="20"
                                      bbWidth="16"
                                      fill="none"
                                      focusable={false}
                                      height={20}
                                      meetOrSlice={0}
                                      minX={0}
                                      minY={0}
                                      style={
                                        [
                                          {
                                            "backgroundColor": "transparent",
                                            "borderWidth": 0,
                                          },
                                          {
                                            "flex": 0,
                                            "height": 20,
                                            "width": 16,
                                          },
                                        ]
                                      }
                                      vbHeight={20}
                                      vbWidth={16}
                                      width={16}
                                      xml="<svg width="16" height="20" viewBox="0 0 16 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M10.59 0.59C10.21 0.21 9.7 0 9.17 0H2C0.9 0 0 0.9 0 2V18C0 19.1 0.89 20 1.99 20H14C15.1 20 16 19.1 16 18V6.83C16 6.3 15.79 5.79 15.41 5.42L10.59 0.59ZM11 16H5C4.45 16 4 15.55 4 15C4 14.45 4.45 14 5 14H11C11.55 14 12 14.45 12 15C12 15.55 11.55 16 11 16ZM11 12H5C4.45 12 4 11.55 4 11C4 10.45 4.45 10 5 10H11C11.55 10 12 10.45 12 11C12 11.55 11.55 12 11 12ZM9 6V1.5L14.5 7H10C9.45 7 9 6.55 9 6Z" fill="#fdfdfd"/>
    </svg>
       
    "
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <RNSVGGroup
                                        fill={null}
                                        propList={
                                          [
                                            "fill",
                                          ]
                                        }
                                      >
                                        <RNSVGPath
                                          d="M10.59 0.59C10.21 0.21 9.7 0 9.17 0H2C0.9 0 0 0.9 0 2V18C0 19.1 0.89 20 1.99 20H14C15.1 20 16 19.1 16 18V6.83C16 6.3 15.79 5.79 15.41 5.42L10.59 0.59ZM11 16H5C4.45 16 4 15.55 4 15C4 14.45 4.45 14 5 14H11C11.55 14 12 14.45 12 15C12 15.55 11.55 16 11 16ZM11 12H5C4.45 12 4 11.55 4 11C4 10.45 4.45 10 5 10H11C11.55 10 12 10.45 12 11C12 11.55 11.55 12 11 12ZM9 6V1.5L14.5 7H10C9.45 7 9 6.55 9 6Z"
                                          fill={
                                            {
                                              "payload": 4294835709,
                                              "type": 0,
                                            }
                                          }
                                          propList={
                                            [
                                              "fill",
                                            ]
                                          }
                                        />
                                      </RNSVGGroup>
                                    </RNSVGSvgView>
                                  </View>
                                  <Text
                                    numberOfLines={0}
                                    style={
                                      {
                                        "borderBottomWidth": 0,
                                        "borderColor": undefined,
                                        "color": "#f0f6fb",
                                        "fontFamily": "Kanit-Regular",
                                        "fontSize": 14,
                                        "lineHeight": undefined,
                                        "textAlign": undefined,
                                      }
                                    }
                                  >
                                    file1
                                  </Text>
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                [
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "justifyContent": "space-between",
                                  },
                                ]
                              }
                            >
                              <View
                                marginR-5={true}
                                style={
                                  [
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    {},
                                    {
                                      "marginRight": 5,
                                    },
                                    {},
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignItems": "center",
                                      "backgroundColor": "#1fcc44",
                                      "borderRadius": 6,
                                      "elevation": 2,
                                      "flexDirection": "row",
                                      "gap": 0,
                                      "justifyContent": "center",
                                      "paddingHorizontal": 10,
                                      "paddingVertical": 6,
                                    }
                                  }
                                  testID="edit-transaction-history"
                                >
                                  <Text
                                    numberOfLines={0}
                                    style={
                                      {
                                        "borderBottomWidth": 0,
                                        "borderColor": undefined,
                                        "color": "#f0f6fb",
                                        "fontFamily": "Kanit-Medium",
                                        "fontSize": 18,
                                        "lineHeight": undefined,
                                        "textAlign": undefined,
                                      }
                                    }
                                  >
                                    ShipOwner.ManageTransactionHistory.buttonEdit
                                  </Text>
                                  <View
                                    style={
                                      [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        {
                                          "position": "absolute",
                                          "right": 20,
                                        },
                                      ]
                                    }
                                  />
                                </View>
                              </View>
                              <View
                                marginR-5={true}
                                style={
                                  [
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    {},
                                    {
                                      "marginRight": 5,
                                    },
                                    {},
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  accessibilityState={
                                    {
                                      "busy": undefined,
                                      "checked": undefined,
                                      "disabled": undefined,
                                      "expanded": undefined,
                                      "selected": undefined,
                                    }
                                  }
                                  accessibilityValue={
                                    {
                                      "max": undefined,
                                      "min": undefined,
                                      "now": undefined,
                                      "text": undefined,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={true}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    {
                                      "alignItems": "center",
                                      "backgroundColor": "#cc1f12",
                                      "borderRadius": 6,
                                      "elevation": 2,
                                      "flexDirection": "row",
                                      "gap": 0,
                                      "justifyContent": "center",
                                      "paddingHorizontal": 10,
                                      "paddingVertical": 6,
                                    }
                                  }
                                  testID="delete-transaction-history"
                                >
                                  <Text
                                    numberOfLines={0}
                                    style={
                                      {
                                        "borderBottomWidth": 0,
                                        "borderColor": undefined,
                                        "color": "#f0f6fb",
                                        "fontFamily": "Kanit-Medium",
                                        "fontSize": 18,
                                        "lineHeight": undefined,
                                        "textAlign": undefined,
                                      }
                                    }
                                  >
                                    ShipOwner.ManageTransactionHistory.buttonDelete
                                  </Text>
                                  <View
                                    style={
                                      [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        {
                                          "position": "absolute",
                                          "right": 20,
                                        },
                                      ]
                                    }
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </View>
            </RCTScrollView>
            <Modal
              animationType="slide"
              hardwareAccelerated={false}
              modifiers={
                {
                  "alignments": {},
                  "backgroundColor": undefined,
                  "borderRadius": undefined,
                  "color": "transparent",
                  "flexStyle": undefined,
                  "margins": {},
                  "paddings": {},
                  "positionStyle": undefined,
                  "typography": undefined,
                }
              }
              testID="confirm-modal-delete"
              transparent={true}
              visible={false}
            />
            <Modal
              animationType="slide"
              hardwareAccelerated={false}
              modifiers={
                {
                  "alignments": {},
                  "backgroundColor": undefined,
                  "borderRadius": undefined,
                  "color": "transparent",
                  "flexStyle": undefined,
                  "margins": {},
                  "paddings": {},
                  "positionStyle": undefined,
                  "typography": undefined,
                }
              }
              onRequestClose={[Function]}
              testID="modalPdf"
              transparent={true}
              visible={false}
            />
          </View>
        </View>
      </View>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="ManageTransactionHistory"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
