// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing add ship input form screen Snapshot testing should render ship input form screen correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onGestureCancel={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                undefined,
                undefined,
                {
                  "flex": 1,
                },
                undefined,
                {},
                {},
                {},
                {
                  "backgroundColor": "#f0f6fb",
                  "justifyContent": "space-between",
                  "position": "relative",
                },
              ]
            }
            testID="AddShipInputForm"
          >
            <RCTScrollView
              contentContainerStyle={
                {
                  "alignItems": undefined,
                  "flex": undefined,
                  "flexGrow": 1,
                  "gap": 10,
                  "justifyContent": undefined,
                  "marginBottom": undefined,
                  "padding": 10,
                  "paddingVertical": undefined,
                }
              }
            >
              <View>
                <View
                  style={
                    [
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                    ]
                  }
                >
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "paddingLeft": 10,
                        }
                      }
                    >
                      <Text
                        numberOfLines={0}
                        style={
                          {
                            "borderBottomWidth": 0,
                            "borderColor": undefined,
                            "color": "#216dab",
                            "fontFamily": "Kanit-Medium",
                            "fontSize": 22,
                            "lineHeight": undefined,
                            "textAlign": undefined,
                          }
                        }
                      >
                        Label
                      </Text>
                    </View>
                    <View>
                      <View
                        style={
                          {
                            "paddingHorizontal": 10,
                            "width": "100%",
                          }
                        }
                        testID="RNE__Input__view-wrapper"
                      >
                        <View
                          collapsable={false}
                          style={
                            {
                              "alignItems": "center",
                              "borderBottomWidth": 1,
                              "borderColor": "#216dab",
                              "borderRadius": 0,
                              "borderWidth": 0,
                              "flexDirection": "row",
                              "transform": [
                                {
                                  "translateX": 0,
                                },
                              ],
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "alignItems": "center",
                                "height": 40,
                                "justifyContent": "center",
                                "marginVertical": 4,
                                "paddingRight": 4,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "overflow": "hidden",
                                }
                              }
                              testID="RNE__ICON__CONTAINER"
                            >
                              <View
                                accessibilityRole="button"
                                android_ripple={
                                  {
                                    "borderless": false,
                                    "color": "rgba(0, 0, 0, 0.3)",
                                    "radius": -5,
                                  }
                                }
                                disabled={false}
                                testID="RNE__ICON__CONTAINER_ACTION"
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "backgroundColor": "transparent",
                                      "justifyContent": "center",
                                    }
                                  }
                                  testID="RNE__ICON"
                                >
                                  <Text
                                    allowFontScaling={false}
                                    selectable={false}
                                    style={
                                      [
                                        {
                                          "color": "#242424",
                                          "fontSize": 24,
                                        },
                                        {
                                          "backgroundColor": "transparent",
                                        },
                                        {
                                          "fontFamily": "Material Icons",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        {},
                                      ]
                                    }
                                    testID="RNE__ICON__Component"
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                          <TextInput
                            editable={true}
                            multiline={false}
                            onBlur={[Function]}
                            onChangeText={[Function]}
                            placeholder="Label"
                            placeholderTextColor="#86939e"
                            pointerEvents="auto"
                            style={
                              {
                                "color": "#4d5963",
                                "flex": 1,
                                "fontFamily": "Kanit-Regular",
                                "fontSize": 18,
                                "minHeight": 40,
                              }
                            }
                            testID="RNE__Input__text-input"
                            underlineColorAndroid="transparent"
                            value=""
                          />
                        </View>
                        <Text
                          style={
                            {
                              "color": "#ff190c",
                              "fontSize": 12,
                              "margin": 5,
                            }
                          }
                        />
                      </View>
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "position": "absolute",
                            "right": 14,
                            "top": 15,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
                <View
                  style={
                    [
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                    ]
                  }
                >
                  <View
                    accessibilityRole="checkbox"
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": false,
                        "disabled": false,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    checkedIcon={<CheckboxCheckedIcon />}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "flex-start",
                        "backgroundColor": "#f0f6fb",
                        "borderColor": "#ffffff",
                        "justifyContent": "center",
                        "margin": 5,
                        "marginLeft": 10,
                        "marginRight": 10,
                        "marginTop": -18,
                        "padding": 10,
                        "width": 535.7142857142858,
                      }
                    }
                    testID="check-required"
                    uncheckedIcon={<CheckboxIcon />}
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "gap": 12,
                        }
                      }
                    >
                      <RNSVGSvgView
                        align="xMidYMid"
                        bbHeight="20"
                        bbWidth="20"
                        fill="none"
                        focusable={false}
                        height={20}
                        meetOrSlice={0}
                        minX={0}
                        minY={0}
                        style={
                          [
                            {
                              "backgroundColor": "transparent",
                              "borderWidth": 0,
                            },
                            {
                              "flex": 0,
                              "height": 20,
                              "width": 20,
                            },
                          ]
                        }
                        vbHeight={20}
                        vbWidth={20}
                        width={20}
                        xml="<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M16.25 2.5H3.75C3.41848 2.5 3.10054 2.6317 2.86612 2.86612C2.6317 3.10054 2.5 3.41848 2.5 3.75V16.25C2.5 16.5815 2.6317 16.8995 2.86612 17.1339C3.10054 17.3683 3.41848 17.5 3.75 17.5H16.25C16.5815 17.5 16.8995 17.3683 17.1339 17.1339C17.3683 16.8995 17.5 16.5815 17.5 16.25V3.75C17.5 3.41848 17.3683 3.10054 17.1339 2.86612C16.8995 2.6317 16.5815 2.5 16.25 2.5ZM3.75 16.25V3.75H16.25V16.25H3.75Z" fill="black"/>
    </svg>       
    "
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <RNSVGGroup
                          fill={null}
                          propList={
                            [
                              "fill",
                            ]
                          }
                        >
                          <RNSVGPath
                            d="M16.25 2.5H3.75C3.41848 2.5 3.10054 2.6317 2.86612 2.86612C2.6317 3.10054 2.5 3.41848 2.5 3.75V16.25C2.5 16.5815 2.6317 16.8995 2.86612 17.1339C3.10054 17.3683 3.41848 17.5 3.75 17.5H16.25C16.5815 17.5 16.8995 17.3683 17.1339 17.1339C17.3683 16.8995 17.5 16.5815 17.5 16.25V3.75C17.5 3.41848 17.3683 3.10054 17.1339 2.86612C16.8995 2.6317 16.5815 2.5 16.25 2.5ZM3.75 16.25V3.75H16.25V16.25H3.75Z"
                            fill={
                              {
                                "payload": 4278190080,
                                "type": 0,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                        </RNSVGGroup>
                      </RNSVGSvgView>
                      <Text
                        accessibilityRole="text"
                        style={
                          {
                            "color": "#43484d",
                            "fontWeight": "bold",
                            "marginLeft": 10,
                            "marginRight": 10,
                          }
                        }
                        testID="RNE__CheckBox__Title"
                      >
                        Required for this input
                      </Text>
                    </View>
                  </View>
                </View>
                <View
                  marginV-10={true}
                  padding-10={true}
                  paddingL-15={true}
                  style={
                    [
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      {
                        "padding": 10,
                        "paddingLeft": 15,
                      },
                      {
                        "marginVertical": 10,
                      },
                      {},
                      {
                        "backgroundColor": "#dbdee0",
                      },
                    ]
                  }
                >
                  <Text
                    numberOfLines={0}
                    style={
                      {
                        "borderBottomWidth": 0,
                        "borderColor": undefined,
                        "color": "#216dab",
                        "fontFamily": "Kanit-Medium",
                        "fontSize": 22,
                        "lineHeight": undefined,
                        "textAlign": undefined,
                      }
                    }
                  >
                    Preview
                  </Text>
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "color": "#20303C",
                          "writingDirection": "ltr",
                        },
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    No Input selected
                  </Text>
                </View>
                <View
                  style={
                    [
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      {
                        "paddingLeft": 10,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "color": "#20303C",
                          "writingDirection": "ltr",
                        },
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        {
                          "color": "#216dab",
                          "fontFamily": "Kanit-Medium",
                          "fontSize": 22,
                          "marginBottom": 10,
                        },
                      ]
                    }
                  >
                    Select field type:
                  </Text>
                  <View
                    style={
                      [
                        {
                          "width": "100%",
                        },
                        {
                          "zIndex": 5000,
                        },
                        {},
                      ]
                    }
                  >
                    <View
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": false,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      forwardedRef={[Function]}
                      onClick={[Function]}
                      onLayout={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "backgroundColor": "#f0f6fb",
                          "borderColor": "#dbdee0",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "elevation": 2,
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "minHeight": 50,
                          "opacity": 1,
                          "paddingHorizontal": 10,
                          "paddingVertical": 3,
                          "width": "100%",
                          "zIndex": 5000,
                        }
                      }
                      testID="field-type"
                    >
                      <Text
                        style={
                          [
                            {
                              "color": "#000",
                              "flex": 1,
                            },
                            {},
                            false,
                            {
                              "color": "#216dab",
                              "fontFamily": "Kanit-Regular",
                            },
                          ]
                        }
                      >
                        Select an item
                      </Text>
                      <View
                        style={
                          [
                            {
                              "marginLeft": 10,
                            },
                            {},
                          ]
                        }
                      >
                        <Image
                          source={
                            {
                              "testUri": "../../react-native-dropdown-picker/src/themes/light/icons/arrow-down.png",
                            }
                          }
                          style={
                            [
                              {
                                "height": 20,
                                "width": 20,
                              },
                              {},
                            ]
                          }
                        />
                      </View>
                    </View>
                    <Modal
                      animationType="slide"
                      hardwareAccelerated={false}
                      onRequestClose={[Function]}
                      presentationStyle="fullScreen"
                      visible={false}
                    />
                  </View>
                </View>
                <View
                  style={
                    [
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                    ]
                  }
                />
                <View
                  flexG-1={true}
                  marginB-30={true}
                  style={
                    [
                      undefined,
                      undefined,
                      {
                        "flexGrow": 1,
                      },
                      undefined,
                      {},
                      {
                        "marginBottom": 30,
                      },
                      {},
                      {
                        "justifyContent": "flex-end",
                      },
                    ]
                  }
                >
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "backgroundColor": "#216dab",
                        "borderRadius": 6,
                        "elevation": 2,
                        "flexDirection": "row",
                        "gap": 0,
                        "justifyContent": "center",
                        "paddingHorizontal": 10,
                        "paddingVertical": 6,
                      }
                    }
                    testID="add-button"
                  >
                    <Text
                      numberOfLines={0}
                      style={
                        {
                          "borderBottomWidth": 0,
                          "borderColor": undefined,
                          "color": "#f0f6fb",
                          "fontFamily": "Kanit-Medium",
                          "fontSize": 18,
                          "lineHeight": undefined,
                          "textAlign": undefined,
                        }
                      }
                    >
                      Add Dynamic Input
                    </Text>
                    <View
                      style={
                        [
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          {
                            "position": "absolute",
                            "right": 20,
                          },
                        ]
                      }
                    />
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="AddShipInputForm"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
