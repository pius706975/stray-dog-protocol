// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing add ship spesific info test Snapshot testing should render add ship spesific info test screen correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="AddShipSpecificInfo"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      >
        <RNSScreenStackHeaderSubview
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          type="right"
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="add-specific-btn"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="24"
              bbWidth="24"
              fill="none"
              focusable={false}
              height={24}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
              width={24}
              xml="<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_77_28470)">
    <path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#323232"/>
    </g>
    <defs>
    <clipPath id="clip0_77_28470">
    <rect width="24" height="24" fill="white"/>
    </clipPath>
    </defs>
    </svg>
    
    
    "
              xmlns="http://www.w3.org/2000/svg"
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGGroup
                  clipPath="clip0_77_28470"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                >
                  <RNSVGPath
                    d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z"
                    fill={
                      {
                        "payload": 4281479730,
                        "type": 0,
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
                <RNSVGDefs>
                  <RNSVGClipPath
                    fill={
                      {
                        "payload": 4278190080,
                        "type": 0,
                      }
                    }
                    name="clip0_77_28470"
                  >
                    <RNSVGRect
                      fill={
                        {
                          "payload": 4294967295,
                          "type": 0,
                        }
                      }
                      height="24"
                      propList={
                        [
                          "fill",
                        ]
                      }
                      width="24"
                      x="0"
                      y="0"
                    />
                  </RNSVGClipPath>
                </RNSVGDefs>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </RNSScreenStackHeaderSubview>
      </RNSScreenStackHeaderConfig>
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <RCTScrollView
            data={
              [
                "",
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsVerticalScrollIndicator={false}
            stickyHeaderIndices={[]}
            style={
              {
                "height": "100%",
                "width": "100%",
              }
            }
            testID="addShipSpecInfo"
            viewabilityConfigCallbackPairs={[]}
          >
            <View>
              <View
                onFocusCapture={[Function]}
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    [
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      {
                        "borderRadius": 8,
                        "margin": 6,
                      },
                    ]
                  }
                >
                  <View
                    ItemSeparatorComponent={[Function]}
                    data={
                      [
                        {
                          "templateType": "bargeSpesific",
                          "value": "barge spesific",
                        },
                        {
                          "templateType": "ferrySpesific",
                          "value": "ferry spesific",
                        },
                      ]
                    }
                    getItem={[Function]}
                    getItemCount={[Function]}
                    keyExtractor={[Function]}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={0.1}
                    onLayout={[Function]}
                    onMomentumScrollBegin={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={[]}
                    viewabilityConfigCallbackPairs={[]}
                  >
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            {
                              "alignItems": "center",
                              "borderBottomWidth": 0.5,
                              "flexDirection": "row",
                              "margin": 5,
                              "padding": 10,
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "width": "90%",
                            }
                          }
                          testID="input-manage-0"
                        >
                          <View
                            style={
                              [
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                {
                                  "flexDirection": "row",
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                [
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  {
                                    "justifyContent": "flex-start",
                                    "padding": 5,
                                    "paddingLeft": 0,
                                    "paddingRight": 10,
                                  },
                                ]
                              }
                            />
                            <Text
                              numberOfLines={0}
                              style={
                                {
                                  "borderBottomWidth": 0,
                                  "borderColor": undefined,
                                  "color": "#4d5963",
                                  "fontFamily": "Kanit-Regular",
                                  "fontSize": 18,
                                  "lineHeight": undefined,
                                  "textAlign": undefined,
                                }
                              }
                            >
                              barge spesific
                            </Text>
                          </View>
                        </View>
                        <View
                          accessibilityRole="button"
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": false,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onClick={[Function]}
                          onLayout={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#bcd3e6",
                              "borderRadius": 999,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "minWidth": undefined,
                              "opacity": 1,
                              "padding": 4,
                              "paddingHorizontal": undefined,
                              "paddingVertical": undefined,
                            }
                          }
                          testID="btn-delete-0"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight="28"
                            bbWidth="28"
                            focusable={false}
                            height={28}
                            meetOrSlice={0}
                            minX={0}
                            minY={-960}
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                {
                                  "flex": 0,
                                  "height": 28,
                                  "width": 28,
                                },
                              ]
                            }
                            vbHeight={960}
                            vbWidth={960}
                            width={28}
                            xml="<svg xmlns="http://www.w3.org/2000/svg" height="28" viewBox="0 -960 960 960" width="28"><path d="M312-144q-29.7 0-50.85-21.15Q240-186.3 240-216v-480h-48v-72h192v-48h192v48h192v72h-48v479.566Q720-186 698.85-165 677.7-144 648-144H312Zm336-552H312v480h336v-480ZM384-288h72v-336h-72v336Zm120 0h72v-336h-72v336ZM312-696v480-480Z" fill="#CC1F12"/></svg>
         "
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <RNSVGGroup
                              fill={
                                {
                                  "payload": 4278190080,
                                  "type": 0,
                                }
                              }
                            >
                              <RNSVGPath
                                d="M312-144q-29.7 0-50.85-21.15Q240-186.3 240-216v-480h-48v-72h192v-48h192v48h192v72h-48v479.566Q720-186 698.85-165 677.7-144 648-144H312Zm336-552H312v480h336v-480ZM384-288h72v-336h-72v336Zm120 0h72v-336h-72v336ZM312-696v480-480Z"
                                fill={
                                  {
                                    "payload": 4291567378,
                                    "type": 0,
                                  }
                                }
                                propList={
                                  [
                                    "fill",
                                  ]
                                }
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                      <View
                        style={
                          [
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      />
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            {
                              "alignItems": "center",
                              "borderBottomWidth": 0.5,
                              "flexDirection": "row",
                              "margin": 5,
                              "padding": 10,
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "width": "90%",
                            }
                          }
                          testID="input-manage-1"
                        >
                          <View
                            style={
                              [
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                undefined,
                                {
                                  "flexDirection": "row",
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                [
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  undefined,
                                  {
                                    "justifyContent": "flex-start",
                                    "padding": 5,
                                    "paddingLeft": 0,
                                    "paddingRight": 10,
                                  },
                                ]
                              }
                            />
                            <Text
                              numberOfLines={0}
                              style={
                                {
                                  "borderBottomWidth": 0,
                                  "borderColor": undefined,
                                  "color": "#4d5963",
                                  "fontFamily": "Kanit-Regular",
                                  "fontSize": 18,
                                  "lineHeight": undefined,
                                  "textAlign": undefined,
                                }
                              }
                            >
                              ferry spesific
                            </Text>
                          </View>
                        </View>
                        <View
                          accessibilityRole="button"
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": false,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onClick={[Function]}
                          onLayout={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "backgroundColor": "#bcd3e6",
                              "borderRadius": 999,
                              "flexDirection": "row",
                              "justifyContent": "center",
                              "minWidth": undefined,
                              "opacity": 1,
                              "padding": 4,
                              "paddingHorizontal": undefined,
                              "paddingVertical": undefined,
                            }
                          }
                          testID="btn-delete-1"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight="28"
                            bbWidth="28"
                            focusable={false}
                            height={28}
                            meetOrSlice={0}
                            minX={0}
                            minY={-960}
                            style={
                              [
                                {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                {
                                  "flex": 0,
                                  "height": 28,
                                  "width": 28,
                                },
                              ]
                            }
                            vbHeight={960}
                            vbWidth={960}
                            width={28}
                            xml="<svg xmlns="http://www.w3.org/2000/svg" height="28" viewBox="0 -960 960 960" width="28"><path d="M312-144q-29.7 0-50.85-21.15Q240-186.3 240-216v-480h-48v-72h192v-48h192v48h192v72h-48v479.566Q720-186 698.85-165 677.7-144 648-144H312Zm336-552H312v480h336v-480ZM384-288h72v-336h-72v336Zm120 0h72v-336h-72v336ZM312-696v480-480Z" fill="#CC1F12"/></svg>
         "
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <RNSVGGroup
                              fill={
                                {
                                  "payload": 4278190080,
                                  "type": 0,
                                }
                              }
                            >
                              <RNSVGPath
                                d="M312-144q-29.7 0-50.85-21.15Q240-186.3 240-216v-480h-48v-72h192v-48h192v48h192v72h-48v479.566Q720-186 698.85-165 677.7-144 648-144H312Zm336-552H312v480h336v-480ZM384-288h72v-336h-72v336Zm120 0h72v-336h-72v336ZM312-696v480-480Z"
                                fill={
                                  {
                                    "payload": 4291567378,
                                    "type": 0,
                                  }
                                }
                                propList={
                                  [
                                    "fill",
                                  ]
                                }
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                  <Modal
                    animationType="slide"
                    hardwareAccelerated={false}
                    onRequestClose={[Function]}
                    transparent={true}
                    visible={false}
                  />
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
