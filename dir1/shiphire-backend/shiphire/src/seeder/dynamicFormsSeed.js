import DynamicForm from '../models/DynamicForm';
import DynamicInput from '../models/DynamicInput';
import Ship from '../models/Ship';
import { shipLocationSeed } from './shipLocationSeed';

const dynamicFormsData = [
    {
        formType: 'addShipForm',
        dynamicForms: [
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'generalAddShip',
                inputType: 'textInput',
                label: 'Ship Name',
                fieldName: 'shipName',
                fieldType: 'string',
                placeholder: 'Enter your ship name',
                required: true,
                order: 1,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'generalAddShip',
                inputType: 'radioDropdown',
                label: 'Ship Category',
                fieldName: 'shipCategory',
                fieldType: 'string',
                placeholder: 'Select your ship category',
                required: true,
                option: [
                    { value: 'Barge' },
                    { value: 'Tugboat' },
                    { value: 'Ferry' },
                    { value: 'Self Propelled Oil Barge' },
                    { value: 'Landing Craft Tank' },
                ],
                order: 2,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'generalAddShip',
                inputType: 'radioDropdown',
                label: 'Ship Location',
                fieldName: 'shipLocation',
                fieldType: 'string',
                placeholder: 'Select your ship location',
                required: true,
                option: shipLocationSeed,
                order: 2,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'generalAddShip',
                inputType: 'numericInput',
                label: 'Rent Price',
                fieldName: 'rentPrice',
                fieldType: 'number',
                unit: 'Rp/month',
                required: true,
                order: 3,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'generalAddShip',
                inputType: 'textInput',
                label: 'Ship Description',
                fieldName: 'shipDescription',
                fieldType: 'string',
                placeholder: 'Enter your ship description',
                required: true,
                validation: {
                    multiline: true,
                },
                order: 4,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'spesificAddShip',
                inputType: 'numericInput',
                label: 'Ship Length',
                fieldName: 'length',
                fieldType: 'number',
                unit: 'meter',
                required: true,
                order: 1,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'spesificAddShip',
                inputType: 'numericInput',
                label: 'Ship Width',
                fieldName: 'width',
                fieldType: 'number',
                unit: 'meter',
                required: true,
                order: 2,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'spesificAddShip',
                inputType: 'numericInput',
                label: 'Ship Height',
                fieldName: 'height',
                fieldType: 'number',
                unit: 'meter',
                required: true,
                order: 3,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Facility',
                fieldName: 'shipFacility',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship facility',
                required: true,
                option: [
                    { value: 'Magnetic Compass' },
                    { value: 'Radar' },
                    { value: 'GPS' },
                    { value: 'Siren' },
                    { value: 'Deck' },
                    { value: 'Radio SSB' },
                    { value: 'Radio VHF' },
                ],
                validation: {
                    min: 1,
                },
                order: 4,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Specification',
                fieldName: 'shipSpec',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship spesification',
                required: true,
                option: [
                    { value: 'Design Speed' },
                    { value: 'Fuel Consumption' },
                    { value: 'Accomodation' },
                    { value: 'Cargo Tank Capacity' },
                    { value: 'Fuel Oil Tank' },
                    { value: 'Fresh Water Tank' },
                    { value: 'Slope Tank' },
                ],
                validation: {
                    min: 1,
                },
                order: 5,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Design Speed',
                fieldName: 'designSpeed',
                fieldType: 'number',
                unit: 'Liters/Hour',
                required: true,
                order: 6,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Accomodation',
                fieldName: 'accomodation',
                fieldType: 'number',
                unit: 'person',
                required: true,
                order: 7,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Accomodation',
                fieldName: 'accomodation',
                fieldType: 'number',
                unit: 'person',
                required: true,
                order: 8,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Cargo Tank Capacity',
                fieldName: 'cargoTankCapacity',
                fieldType: 'number',
                unit: 'm3',
                required: true,
                order: 9,
            },

            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Fuel Oil Tank',
                fieldName: 'fuelOilTank',
                fieldType: 'number',
                unit: 'm3',
                required: true,
                order: 10,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Fresh Water Tank',
                fieldName: 'freshWaterTank',
                fieldType: 'number',
                unit: 'm3',
                required: true,
                order: 11,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'selfPropelledOilBargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Slope Tank',
                fieldName: 'slopeTank',
                fieldType: 'number',
                unit: 'm3',
                required: true,
                order: 12,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'landingCraftTankSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Facility',
                fieldName: 'shipFacility',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship facility',
                required: true,
                option: [
                    { value: 'Bulldozer Machine' },
                    { value: 'Heavy Cargo' },
                    { value: 'Dump Truck' },
                    { value: 'Excavator' },
                    { value: 'Loader' },
                ],
                validation: {
                    min: 1,
                },
                order: 4,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'landingCraftTankSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Specification',
                fieldName: 'shipSpec',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship spesification',
                required: true,
                option: [{ value: 'Capacity' }],
                validation: {
                    min: 1,
                },
                order: 5,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'landingCraftTankSpesificSpec',
                inputType: 'numericInput',
                label: 'Capacity',
                fieldName: 'capacity',
                fieldType: 'number',
                unit: 'Tons',
                required: true,
                order: 6,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'bargeSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Facility',
                fieldName: 'shipFacility',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship facility',
                required: true,
                option: [
                    { value: 'Cranes' },
                    { value: 'Pumps' },
                    { value: 'Conveyor Belt' },
                    { value: 'Telescopic Cranes' },
                    { value: 'Hydraulic Winches' },
                    { value: 'Covered Storage' },
                    { value: 'Open Deck Storage' },
                ],
                validation: {
                    min: 1,
                },
                order: 4,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'bargeSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Specification',
                fieldName: 'shipSpec',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship spesification',
                required: true,
                option: [{ value: 'Capacity' }],
                validation: {
                    min: 1,
                },
                order: 5,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'bargeSpesificSpec',
                inputType: 'numericInput',
                label: 'Capacity',
                fieldName: 'capacity',
                fieldType: 'number',
                unit: 'tons',
                required: true,
                order: 4,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'tugboatSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Facility',
                fieldName: 'shipFacility',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship facility',
                required: true,
                option: [
                    { value: 'Towing Hooks' },
                    { value: 'Radar' },
                    { value: 'Sonar' },
                    { value: 'GPS' },
                    { value: 'VHF Radio' },
                    { value: 'Satellite Communication' },
                    { value: 'Electric Towing Winches' },
                    { value: 'Hydraulic Towing Winches' },
                ],
                validation: {
                    min: 1,
                },
                order: 5,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'tugboatSpesific',
                inputType: 'selectDropDown',
                label: 'Ship Specification',
                fieldName: 'shipSpec',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship spesification',
                required: true,
                option: [
                    { value: 'Towing Capacity' },
                    { value: 'Fuel Capacity' },
                    { value: 'Traction' },
                    { value: 'Draft' },
                    { value: 'Capacity' },
                ],
                validation: {
                    min: 1,
                },
                order: 6,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'tugboatSpesificSpec',
                inputType: 'numericInput',
                label: 'Towing Capacity',
                fieldName: 'towingCapacity',
                fieldType: 'number',
                unit: 'GVWR',
                required: true,
                order: 7,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'tugboatSpesificSpec',
                inputType: 'numericInput',
                label: 'Fuel Capacity',
                fieldName: 'fuelCapacity',
                fieldType: 'number',
                unit: 'liter',
                required: true,
                order: 8,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'tugboatSpesificSpec',
                inputType: 'numericInput',
                label: 'Traction',
                fieldName: 'traction',
                fieldType: 'number',
                unit: 'HP',
                required: true,
                order: 9,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'tugboatSpesificSpec',
                inputType: 'numericInput',
                label: 'Draft',
                fieldName: 'draft',
                fieldType: 'number',
                unit: 'meter',
                required: true,
                order: 10,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'tugboatSpesificSpec',
                inputType: 'numericInput',
                label: 'Capacity',
                fieldName: 'capacity',
                fieldType: 'number',
                unit: 'tons',
                required: true,
                order: 11,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'ferrySpesific',
                inputType: 'selectDropDown',
                label: 'Ship Facility',
                fieldName: 'shipFacility',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship facility',
                required: true,
                option: [
                    { value: 'Economy Class' },
                    { value: 'Business Class' },
                    { value: 'First Class Lounge' },
                    { value: 'Truck Deck' },
                    { value: 'Cafetaria' },
                    { value: 'Wi-Fi' },
                    { value: 'TV Screens' },
                    { value: 'Car Deck' },
                    { value: 'Music System' },
                ],
                validation: {
                    min: 1,
                },
                order: 4,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'ferrySpesific',
                inputType: 'selectDropDown',
                label: 'Ship Specification',
                fieldName: 'shipSpec',
                fieldType: 'arrayOfString',
                placeholder: 'Select your ship spesification',
                required: true,
                option: [
                    { value: 'Vehicle Capacity' },
                    { value: 'Passenger Capacity' },
                    { value: 'Max Speed' },
                    { value: 'Fuel Capacity' },
                    { value: 'Crew Capacity' },
                ],
                validation: {
                    min: 1,
                },
                order: 5,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'ferrySpesificSpec',
                inputType: 'numericInput',
                label: 'Vehicle Capacity',
                fieldName: 'vehicleCapacity',
                fieldType: 'number',
                unit: 'units',
                required: true,
                order: 6,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'ferrySpesificSpec',
                inputType: 'numericInput',
                label: 'Passenger Capacity',
                fieldName: 'passengerCapacity',
                fieldType: 'number',
                unit: 'person',
                required: true,
                order: 7,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'ferrySpesificSpec',
                inputType: 'numericInput',
                label: 'Max Speed',
                fieldName: 'maxSpeed',
                fieldType: 'number',
                unit: 'knot',
                required: true,
                order: 8,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'ferrySpesificSpec',
                inputType: 'numericInput',
                label: 'Fuel Capacity',
                fieldName: 'fuelCapacity',
                fieldType: 'number',
                unit: 'liter',
                required: true,
                order: 9,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'ferrySpesificSpec',
                inputType: 'numericInput',
                label: 'Crew Capacity',
                fieldName: 'crewCapacity',
                fieldType: 'number',
                unit: 'person',
                required: true,
                order: 10,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'shipDoc',
                inputType: 'docSelect',
                label: 'Certificate of Register',
                fieldName: 'CertificateOfRegister',
                fieldType: 'document',
                required: true,
                docExpired: true,
                order: 1,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'shipDoc',
                inputType: 'docSelect',
                label: 'Seaworthy Certificate',
                fieldName: 'seaworthyCertificate',
                fieldType: 'document',
                required: true,
                docExpired: true,
                order: 2,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'shipDoc',
                inputType: 'docSelect',
                label: 'Safety Certificate',
                fieldName: 'safetyCertificate',
                fieldType: 'document',
                required: true,
                docExpired: true,
                order: 3,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'shipDoc',
                inputType: 'docSelect',
                label: 'Deratting Certificate',
                fieldName: 'derattingCertificate',
                fieldType: 'document',
                required: true,
                docExpired: true,
                order: 4,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'shipDoc',
                inputType: 'docSelect',
                label: 'Ship Measurement Certificate',
                fieldName: 'shipMeasurementCertificate',
                fieldType: 'document',
                required: true,
                docExpired: true,
                order: 5,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'addShipForm',
                templateType: 'shipImage',
                inputType: 'imageSelect',
                label: 'Ship Image',
                fieldName: 'shipImage',
                fieldType: 'image',
                required: true,
                order: 1,
            },
        ],
    },
    {
        formType: 'rfqForm',
        shipId: '5f8c1f5b2c0c7c0017b4e7f7',
        templateType: 'bargeRfq',
        shipName: 'Barge Hauler',
        dynamicForms: [
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Needs',
                fieldName: 'needs',
                fieldType: 'string',
                placeholder: 'Ex: for transporting',
                required: true,
                validation: {
                    multiline: true,
                },
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7f9',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'radioDropdown',
                label: 'Ship Rent Type',
                fieldName: 'shipRentType',
                fieldType: 'string',
                placeholder: 'Select your ship rent type',
                required: true,
                option: [{ value: 'One Time Rent' }, { value: 'Monthly Rent' }],
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e2',
                formType: 'rfqForm',
                templateType: 'bargeRfq',
                inputType: 'textInput',
                label: 'Commodity',
                fieldName: 'commodity',
                fieldType: 'string',
                placeholder: 'Ex: coal, sand, etc',
                required: true,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e4',
                formType: 'rfqForm',
                templateType: 'bargeRfq',
                inputType: 'numericInput',
                label: 'Tonnage',
                fieldName: 'tonnage',
                fieldType: 'number',
                unit: 'Tons',
                required: true,
                validation: {
                    min: 10,
                },
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e6',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Location Departure',
                fieldName: 'locationDeparture',
                fieldType: 'string',
                placeholder: 'Ex: Palu, Sulawesi Tengah',
                required: true,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e8',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Location Destination',
                fieldName: 'locationDestination',
                fieldType: 'string',
                placeholder: 'Ex: Surabaya, Jawa Timur',
                required: true,
            },
            // {
            //     dynamicInput: '651f92405fd4d4e45576c7ea',
            //     formType: 'rfqForm',
            //     templateType: 'generalRfqDefault',
            //     inputType: 'datePicker',
            //     label: 'Rental Start Date',
            //     fieldName: 'rentalStartDate',
            //     fieldType: 'date',
            //     required: true,
            // },
            // {
            //     dynamicInput: '651f92405fd4d4e45576c7ec',
            //     formType: 'rfqForm',
            //     templateType: 'generalRfqDefault',
            //     inputType: 'datePicker',
            //     label: 'Rental End Date',
            //     fieldName: 'rentalEndDate',
            //     fieldType: 'date',
            //     required: true,
            // },
            {
                dynamicInput: '653a26306d97f37f5e45ac41',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'datePickerCalendar',
                label: 'Rental Date',
                fieldName: 'rentalDate',
                fieldType: 'string',
                required: true,
                placeholder: 'Select date',
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7ee',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Additional Information',
                fieldName: 'additionalInformation',
                fieldType: 'string',
                placeholder: 'Ex: Additioal Crew, etc',
                required: false,
            },
        ],
    },
    {
        formType: 'rfqForm',
        templateType: 'defaultRfq',
        dynamicForms: [
            {
                dynamicInput: '651f92405fd4d4e45576c7e0',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Needs',
                fieldName: 'needs',
                fieldType: 'string',
                placeholder: 'Ex: for transporting',
                required: true,
                validation: {
                    multiline: true,
                },
            },
            // {
            //     dynamicInput: '651f92405fd4d4e45576c7ea',
            //     formType: 'rfqForm',
            //     templateType: 'generalRfqDefault',
            //     inputType: 'datePicker',
            //     label: 'Rental Start Date',
            //     fieldName: 'rentalStartDate',
            //     fieldType: 'date',
            //     required: true,
            // },
            // {
            //     dynamicInput: '651f92405fd4d4e45576c7ec',
            //     formType: 'rfqForm',
            //     templateType: 'generalRfqDefault',
            //     inputType: 'datePicker',
            //     label: 'Rental End Date',
            //     fieldName: 'rentalEndDate',
            //     fieldType: 'date',
            //     required: true,
            // },
            {
                dynamicInput: '651f92405fd4d4e45576c7f9',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'radioDropdown',
                label: 'Ship Rent Type',
                fieldName: 'shipRentType',
                fieldType: 'string',
                placeholder: 'Select your ship rent type',
                required: true,
                option: [{ value: 'One Time Rent' }, { value: 'Monthly Rent' }],
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e6',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Location Departure',
                fieldName: 'locationDeparture',
                fieldType: 'string',
                placeholder: 'Ex: Palu, Sulawesi Tengah',
                required: true,
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7e8',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Location Destination',
                fieldName: 'locationDestination',
                fieldType: 'string',
                placeholder: 'Ex: Surabaya, Jawa Timur',
                required: true,
            },
            {
                dynamicInput: '653a26306d97f37f5e45ac41',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'datePickerCalendar',
                label: 'Rental Date',
                fieldName: 'rentalDate',
                fieldType: 'string',
                required: true,
                placeholder: 'Select date',
            },
            {
                dynamicInput: '651f92405fd4d4e45576c7ef',
                formType: 'rfqForm',
                templateType: 'defaultRfq',
                inputType: 'textInput',
                label: 'Additional Information',
                fieldName: 'additionalInformation',
                fieldType: 'string',
                placeholder: 'Ex: Additioal Crew, etc',
                required: false,
            },
        ],
    },
];

const shipNames = [
    'MV Seaside Voyager',
    'Swift Tow',
    'Island Hopper',
    'Cargo Carrier',
    'Mighty Tug',
    'Coastal Cruiser',
    'Coastal Cruiser',
    'Ferry Cruiser',
];

export const seedDynamicForms = async () => {
    try {
        for (const dynamicForm of dynamicFormsData) {
            if (dynamicForm.shipName) {
                const ship = await Ship.findOne({
                    name: dynamicForm.shipName,
                });

                const newDynamicForm = new DynamicForm({
                    shipId: ship._id,
                    formType: dynamicForm.formType,
                    templateType: dynamicForm.templateType,
                    shipName: dynamicForm.shipName,
                    dynamicForms: dynamicForm.dynamicForms,
                });

                await newDynamicForm.save();

                dynamicForm.dynamicForms.map(async (data, index) => {
                    const newDynamicInput = new DynamicInput({
                        formType: data.formType,
                        templateType: data.templateType,
                        inputType: data.inputType,
                        label: data.label,
                        fieldName: data.fieldName,
                        fieldType: data.fieldType,
                        placeholder: data.placeholder,
                        unit: data.unit,
                        required: data.required,
                        validation: data.validation,
                        option: data.option,
                        order: data.order,
                        docExpired: data.docExpired,
                    });

                    await newDynamicInput.save();

                    const updateQuery = {};
                    updateQuery[`dynamicForms.${index}.dynamicInput`] =
                        newDynamicInput._id;

                    await DynamicForm.findOneAndUpdate(
                        { _id: newDynamicForm._id },
                        { $set: updateQuery },
                        { new: true },
                    );
                });

                await Ship.findOneAndUpdate(
                    { _id: ship._id },
                    { rfqDynamicForm: newDynamicForm._id, shipApproved: true },
                    { new: true },
                );
            } else {
                const newDynamicForm = new DynamicForm({
                    formType: dynamicForm.formType,
                    shipName: dynamicForm.shipName,
                    templateType: dynamicForm.templateType,
                    dynamicForms: dynamicForm.dynamicForms,
                });

                await newDynamicForm.save();

                dynamicForm.dynamicForms.map(async (data, index) => {
                    const newDynamicInput = new DynamicInput({
                        formType: data.formType,
                        templateType: data.templateType,
                        inputType: data.inputType,
                        label: data.label,
                        fieldName: data.fieldName,
                        fieldType: data.fieldType,
                        placeholder: data.placeholder,
                        unit: data.unit,
                        required: data.required,
                        validation: data.validation,
                        option: data.option,
                        order: data.order,
                        docExpired: data.docExpired,
                    });

                    await newDynamicInput.save();

                    const updateQuery = {};
                    updateQuery[`dynamicForms.${index}.dynamicInput`] =
                        newDynamicInput._id;

                    const newDoc = await DynamicForm.findOneAndUpdate(
                        { _id: newDynamicForm._id },
                        { $set: updateQuery },
                        { new: true },
                    );
                });
            }
        }
        for (const shipName of shipNames) {
            const defaultRfq = await DynamicForm.findOne({
                formType: 'defaultRfq',
            });
            if (!defaultRfq) {
                console.error('Default RFQ form not found.');
                // Handle the case where the default RFQ form is not found
                return;
            }
            const shipUpdated = await Ship.findOneAndUpdate(
                { name: shipName },
                { rfqDynamicForm: defaultRfq._id, shipApproved: true },
                { new: true },
            );
        }
    } catch (error) {
        console.error(`Error seeding dynamic form:`, error);
    }
};
